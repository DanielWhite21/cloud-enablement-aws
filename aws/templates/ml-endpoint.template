AWSTemplateFormatVersion: 2010-09-09
Description: Create interface endpoint for a VPC using AWS Lambda
Metadata:
  version: 9.0-5
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Interface Endpoint Configuration"
        Parameters:
          - S3Bucket
          - Vpc
          # - SecurityGroup
          - Subnets
    ParameterLabels:
      S3Bucket:
        default: 'S3 Bucket Name'
      Vpc:
        default: 'VPC'
      # SecurityGroup:
      #   default: 'Security Group'
      Subnets:
        default: 'Subnets'
Parameters:
  S3Bucket:
    Description: The S3 bucket name that contains the lambda package. Must be in the same region.
    Type: String
  Vpc:
    Description: ID for the VPC for which endpoint will be created
    Type: 'AWS::EC2::VPC::Id'
  # SecurityGroup:
  #   Description: ID for the Security Group that the endpoint belongs to. Must be in the same VPC with the subnets.
  #   Type: "AWS::EC2::SecurityGroup::Id"
  Subnets:
    Description: IDs of Subnets associated with endpoint. Accept either 1 subnet or 3 subnets.
    Type: 'List<AWS::EC2::Subnet::Id>'
Resources:
  EndpointExecRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: endpoint
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "ec2:CreateVpcEndpoint"
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: 'arn:aws:logs:*:*:*'
  EndpointFunction:
    Type: 'AWS::Lambda::Function'
    DependsOn: EndpointExecRole
    Properties:
      Code:
        S3Bucket: !Ref S3Bucket
        S3Key: endpoint.zip
      Handler: endpoint.handler
      Role: !GetAtt [EndpointExecRole, Arn]
      Runtime: python3.6
      Timeout: '30'
  Ec2InterfaceEndpoint:
    Type: 'Custom::Ec2InterfaceEndpoint'
    DependsOn: EndpointFunction
    Properties:
      ServiceToken: !GetAtt [EndpointFunction, Arn]
      Vpc: !Ref Vpc
      ServiceName: "com.amazonaws.us-west-2.ec2"
      Subnets: !Ref Subnets
      # SecurityGroup: !Ref SecurityGroup
